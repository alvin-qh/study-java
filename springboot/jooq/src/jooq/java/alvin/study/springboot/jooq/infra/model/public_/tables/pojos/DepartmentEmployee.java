/*
 * This file is generated by jOOQ.
 */
package alvin.study.springboot.jooq.infra.model.public_.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DepartmentEmployee implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long orgId;
    private Long employeeId;
    private Long departmentId;
    private Integer version;
    private Long createdBy;
    private Long updatedBy;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public DepartmentEmployee() {}

    public DepartmentEmployee(DepartmentEmployee value) {
        this.id = value.id;
        this.orgId = value.orgId;
        this.employeeId = value.employeeId;
        this.departmentId = value.departmentId;
        this.version = value.version;
        this.createdBy = value.createdBy;
        this.updatedBy = value.updatedBy;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public DepartmentEmployee(
        Long id,
        Long orgId,
        Long employeeId,
        Long departmentId,
        Integer version,
        Long createdBy,
        Long updatedBy,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.id = id;
        this.orgId = orgId;
        this.employeeId = employeeId;
        this.departmentId = departmentId;
        this.version = version;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ID</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ID</code>.
     */
    public DepartmentEmployee setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ORG_ID</code>.
     */
    public Long getOrgId() {
        return this.orgId;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ORG_ID</code>.
     */
    public DepartmentEmployee setOrgId(Long orgId) {
        this.orgId = orgId;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.EMPLOYEE_ID</code>.
     */
    public Long getEmployeeId() {
        return this.employeeId;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.EMPLOYEE_ID</code>.
     */
    public DepartmentEmployee setEmployeeId(Long employeeId) {
        this.employeeId = employeeId;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.DEPARTMENT_ID</code>.
     */
    public Long getDepartmentId() {
        return this.departmentId;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.DEPARTMENT_ID</code>.
     */
    public DepartmentEmployee setDepartmentId(Long departmentId) {
        this.departmentId = departmentId;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.VERSION</code>.
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.VERSION</code>.
     */
    public DepartmentEmployee setVersion(Integer version) {
        this.version = version;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_BY</code>.
     */
    public Long getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_BY</code>.
     */
    public DepartmentEmployee setCreatedBy(Long createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_BY</code>.
     */
    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_BY</code>.
     */
    public DepartmentEmployee setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_AT</code>.
     */
    public DepartmentEmployee setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_AT</code>.
     */
    public DepartmentEmployee setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DepartmentEmployee other = (DepartmentEmployee) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.orgId == null) {
            if (other.orgId != null)
                return false;
        }
        else if (!this.orgId.equals(other.orgId))
            return false;
        if (this.employeeId == null) {
            if (other.employeeId != null)
                return false;
        }
        else if (!this.employeeId.equals(other.employeeId))
            return false;
        if (this.departmentId == null) {
            if (other.departmentId != null)
                return false;
        }
        else if (!this.departmentId.equals(other.departmentId))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.orgId == null) ? 0 : this.orgId.hashCode());
        result = prime * result + ((this.employeeId == null) ? 0 : this.employeeId.hashCode());
        result = prime * result + ((this.departmentId == null) ? 0 : this.departmentId.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DepartmentEmployee (");

        sb.append(id);
        sb.append(", ").append(orgId);
        sb.append(", ").append(employeeId);
        sb.append(", ").append(departmentId);
        sb.append(", ").append(version);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedBy);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
