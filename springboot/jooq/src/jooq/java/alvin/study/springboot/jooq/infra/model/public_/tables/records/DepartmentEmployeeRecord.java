/*
 * This file is generated by jOOQ.
 */
package alvin.study.springboot.jooq.infra.model.public_.tables.records;


import alvin.study.springboot.jooq.infra.model.public_.tables.DepartmentEmployee;

import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DepartmentEmployeeRecord extends UpdatableRecordImpl<DepartmentEmployeeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ID</code>.
     */
    public DepartmentEmployeeRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ORG_ID</code>.
     */
    public DepartmentEmployeeRecord setOrgId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.ORG_ID</code>.
     */
    public Long getOrgId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.EMPLOYEE_ID</code>.
     */
    public DepartmentEmployeeRecord setEmployeeId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.EMPLOYEE_ID</code>.
     */
    public Long getEmployeeId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.DEPARTMENT_ID</code>.
     */
    public DepartmentEmployeeRecord setDepartmentId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.DEPARTMENT_ID</code>.
     */
    public Long getDepartmentId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.VERSION</code>.
     */
    public DepartmentEmployeeRecord setVersion(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.VERSION</code>.
     */
    public Integer getVersion() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_BY</code>.
     */
    public DepartmentEmployeeRecord setCreatedBy(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_BY</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_BY</code>.
     */
    public DepartmentEmployeeRecord setUpdatedBy(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_BY</code>.
     */
    public Long getUpdatedBy() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_AT</code>.
     */
    public DepartmentEmployeeRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_AT</code>.
     */
    public DepartmentEmployeeRecord setUpdatedAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.DEPARTMENT_EMPLOYEE.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DepartmentEmployeeRecord
     */
    public DepartmentEmployeeRecord() {
        super(DepartmentEmployee.DEPARTMENT_EMPLOYEE);
    }

    /**
     * Create a detached, initialised DepartmentEmployeeRecord
     */
    public DepartmentEmployeeRecord(Long id, Long orgId, Long employeeId, Long departmentId, Integer version, Long createdBy, Long updatedBy, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(DepartmentEmployee.DEPARTMENT_EMPLOYEE);

        setId(id);
        setOrgId(orgId);
        setEmployeeId(employeeId);
        setDepartmentId(departmentId);
        setVersion(version);
        setCreatedBy(createdBy);
        setUpdatedBy(updatedBy);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DepartmentEmployeeRecord
     */
    public DepartmentEmployeeRecord(alvin.study.springboot.jooq.infra.model.public_.tables.pojos.DepartmentEmployee value) {
        super(DepartmentEmployee.DEPARTMENT_EMPLOYEE);

        if (value != null) {
            setId(value.getId());
            setOrgId(value.getOrgId());
            setEmployeeId(value.getEmployeeId());
            setDepartmentId(value.getDepartmentId());
            setVersion(value.getVersion());
            setCreatedBy(value.getCreatedBy());
            setUpdatedBy(value.getUpdatedBy());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
