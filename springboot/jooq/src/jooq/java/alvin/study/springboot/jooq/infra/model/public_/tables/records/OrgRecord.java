/*
 * This file is generated by jOOQ.
 */
package alvin.study.springboot.jooq.infra.model.public_.tables.records;


import alvin.study.springboot.jooq.infra.model.public_.tables.Org;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrgRecord extends UpdatableRecordImpl<OrgRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.ORG.ID</code>.
     */
    public OrgRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ORG.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ORG.NAME</code>.
     */
    public OrgRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ORG.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ORG.DELETED</code>.
     */
    public OrgRecord setDeleted(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ORG.DELETED</code>.
     */
    public Long getDeleted() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ORG.CREATED_AT</code>.
     */
    public OrgRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ORG.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ORG.UPDATED_AT</code>.
     */
    public OrgRecord setUpdatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.ORG.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrgRecord
     */
    public OrgRecord() {
        super(Org.ORG);
    }

    /**
     * Create a detached, initialised OrgRecord
     */
    public OrgRecord(Long id, String name, Long deleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Org.ORG);

        setId(id);
        setName(name);
        setDeleted(deleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OrgRecord
     */
    public OrgRecord(alvin.study.springboot.jooq.infra.model.public_.tables.pojos.Org value) {
        super(Org.ORG);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDeleted(value.getDeleted());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
