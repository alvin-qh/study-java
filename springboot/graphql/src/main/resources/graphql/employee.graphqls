# 和 Employee 相关的所有操作

# 雇员类型的 Edge 类型, 参考 graphql.relay.DefaultEdge<EmployeeType> 类型
type EmployeeEdge {
  node: Employee!
  cursor: String!
}

# 雇员类型的 Connection 类型, 参考 alvin.study.core.graphql.relay.ListConnection<EmployeeType> 类型
type EmployeeConnection {
  edges: [EmployeeEdge!]
  pageInfo: PageInfo
  totalCount: Int!
}

# 定义 Employee 类型, 参考 `alvin.study.springboot.graphql.infra.entity.Employee` 类型
type Employee {
  id: ID!
  orgId: Long
  org: Org!
  name: String!
  email: String!
  title: String!
  info: JSON # JSON 类型字段, 可以处理各类 JSON 格式的信息, 对应 `java.util.Map` 类型
  departments: [Department!] # 所属部门
  createdBy: Long
  createdByUser: User
  updatedBy: Long
  updatedByUser: User
  createdAt: DateTime
  updatedAt: DateTime
}

# 扩展根查询类型, 添加雇员查询方法, 参考 `alvin.study.springboot.graphql.app.api.query.EmployeeQuery` 类型
extend type Query {
  employee(id: ID!): Employee! # 根据 id 查询雇员信息
}

# 变更雇员信息的输入类, alvin.study.app.api.schema.input.EmployeeInput 类型
input EmployeeInput {
  name: String! @len(min: 2, max: 20)
  email: String! @len(min: 2, max: 50)
  title: String! @len(min: 2, max: 20)
  info: JSON  # JSON 类型字段, 可以处理各类 JSON 格式的信息, 对应 `java.util.Map` 类型
  departmentIds: [Long!]
}

# 创建雇员信息的结果类, alvin.study.app.api.schema.payload.CreateEmployeePayload 类型
type EmployeeResult {
  result: Employee
}

# 扩展根变更类型, 参考 alvin.study.app.api.mutation.UserMutation 类型
extend type Mutation {
  createEmployee(input: EmployeeInput!): EmployeeResult!
  updateEmployee(id: ID!, input: EmployeeInput!): EmployeeResult!
  deleteEmployee(id: ID!): Boolean!
}
