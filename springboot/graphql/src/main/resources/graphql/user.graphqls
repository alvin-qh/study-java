# 和 User 相关的所有操作

# 定义用户类型枚举, 参考 `alvin.study.springboot.graphql.infra.entity.UserGroup` 类型
enum UserGroup {
  ADMIN
  OPERATOR
  NORMAL
}

# 定义 User 类型, 参考 `alvin.study.springboot.graphql.infra.entity.User` 类型
type User {
  id: ID!
  orgId: Long
  org: Org!
  account: String!
  group: UserGroup!
  createdBy: Long
  createdByUser: User
  updatedBy: Long
  updatedByUser: User
  createdAt: DateTime
  updatedAt: DateTime
}

# 扩展根查询类型, 添加用户查询方法, 参考 `alvin.study.springboot.graphql.app.api.query.UserQuery` 类型
extend type Query {
  user(id: ID!): User! # 根据 id 查询用户信息
}

# 变更用户信息的输入类, `alvin.study.springboot.graphql.app.api.mutation.UserInput` 类型
input UserInput {
  account: String! @len(min: 3, max: 50) # 这里使用了一个字段处理器, 参考 /graphql/type.graphqls 文件的 directive 定义
  password: String! @len(min: 6, max: 20) # 这里使用了一个字段处理器, 参考 /graphql/type.graphqls 文件的 directive 定义
  group: UserGroup! = NORMAL # 设置默认值
}

type UserResult {
  result: User
}

input LoginInput {
  orgId: Long!
  account: String!
  password: String!
}

# 扩展根变更类型, 参考 alvin.study.app.api.mutation.UserMutation 类型
extend type Mutation {
  login(input: LoginInput!): UserResult!
  createUser(input: UserInput!): UserResult!
  # updateUser(id: ID!, input: UserInput!): UpdateUserPayload!
  # deleteUser(id: ID!): DeleteUserPayload!
}
